import { BaseColor } from './base-color.class';
/**
 * HSB and HSV are the same
 *
 * Hue = ranges from 0 to 360Â°
 * Saturation = ranges from 0 to 100%
 * Brightness or Value = ranges from 0 to 100%
 * Alpha = range from 0-1
 */
export class Hsva extends BaseColor {
    constructor(hue, saturation, value, alpha) {
        super();
        this.hue = hue;
        this.saturation = saturation;
        this.value = value;
        this.alpha = alpha;
    }
    toString(showAlphaChannel = true) {
        return showAlphaChannel ? `hsva(${this.getHue()}, ${this.getSaturation()}%, ${this.getValue()}%, ${this.getAlpha()})`
            : `hsv(${this.getHue()}, ${this.getSaturation()}%, ${this.getValue()}%)`;
    }
    getHue() {
        return Math.round(this.hue);
    }
    getSaturation() {
        return Math.round(this.saturation);
    }
    getValue() {
        return Math.round(this.value);
    }
    getAlpha() {
        return Math.round(this.alpha * 100) / 100;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHN2YS5jbGFzcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lwbGFiL25neC1jb2xvci1waWNrZXIvc3JjL2xpYi9oZWxwZXJzL2hzdmEuY2xhc3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRS9DOzs7Ozs7O0dBT0c7QUFDSCxNQUFNLE9BQU8sSUFBSyxTQUFRLFNBQVM7SUFFL0IsWUFBbUIsR0FBVyxFQUFTLFVBQWtCLEVBQVMsS0FBYSxFQUFTLEtBQWE7UUFDakcsS0FBSyxFQUFFLENBQUM7UUFETyxRQUFHLEdBQUgsR0FBRyxDQUFRO1FBQVMsZUFBVSxHQUFWLFVBQVUsQ0FBUTtRQUFTLFVBQUssR0FBTCxLQUFLLENBQVE7UUFBUyxVQUFLLEdBQUwsS0FBSyxDQUFRO0lBRXJHLENBQUM7SUFFTSxRQUFRLENBQUMsbUJBQTRCLElBQUk7UUFDNUMsT0FBTyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsUUFBUSxJQUFJLENBQUMsTUFBTSxFQUFFLEtBQUssSUFBSSxDQUFDLGFBQWEsRUFBRSxNQUFNLElBQUksQ0FBQyxRQUFRLEVBQUUsTUFBTSxJQUFJLENBQUMsUUFBUSxFQUFFLEdBQUc7WUFDakgsQ0FBQyxDQUFDLE9BQU8sSUFBSSxDQUFDLE1BQU0sRUFBRSxLQUFLLElBQUksQ0FBQyxhQUFhLEVBQUUsTUFBTSxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQztJQUNqRixDQUFDO0lBRU0sTUFBTTtRQUNULE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVNLGFBQWE7UUFDaEIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBRU0sUUFBUTtRQUNYLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVNLFFBQVE7UUFDWCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsR0FBRyxHQUFHLENBQUM7SUFDOUMsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzZUNvbG9yIH0gZnJvbSAnLi9iYXNlLWNvbG9yLmNsYXNzJztcclxuXHJcbi8qKlxyXG4gKiBIU0IgYW5kIEhTViBhcmUgdGhlIHNhbWVcclxuICpcclxuICogSHVlID0gcmFuZ2VzIGZyb20gMCB0byAzNjDCsFxyXG4gKiBTYXR1cmF0aW9uID0gcmFuZ2VzIGZyb20gMCB0byAxMDAlXHJcbiAqIEJyaWdodG5lc3Mgb3IgVmFsdWUgPSByYW5nZXMgZnJvbSAwIHRvIDEwMCVcclxuICogQWxwaGEgPSByYW5nZSBmcm9tIDAtMVxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIEhzdmEgZXh0ZW5kcyBCYXNlQ29sb3Ige1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBodWU6IG51bWJlciwgcHVibGljIHNhdHVyYXRpb246IG51bWJlciwgcHVibGljIHZhbHVlOiBudW1iZXIsIHB1YmxpYyBhbHBoYTogbnVtYmVyKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdG9TdHJpbmcoc2hvd0FscGhhQ2hhbm5lbDogYm9vbGVhbiA9IHRydWUpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiBzaG93QWxwaGFDaGFubmVsID8gYGhzdmEoJHt0aGlzLmdldEh1ZSgpfSwgJHt0aGlzLmdldFNhdHVyYXRpb24oKX0lLCAke3RoaXMuZ2V0VmFsdWUoKX0lLCAke3RoaXMuZ2V0QWxwaGEoKX0pYFxyXG4gICAgICAgICAgICA6IGBoc3YoJHt0aGlzLmdldEh1ZSgpfSwgJHt0aGlzLmdldFNhdHVyYXRpb24oKX0lLCAke3RoaXMuZ2V0VmFsdWUoKX0lKWA7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldEh1ZSgpIHtcclxuICAgICAgICByZXR1cm4gTWF0aC5yb3VuZCh0aGlzLmh1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldFNhdHVyYXRpb24oKSB7XHJcbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQodGhpcy5zYXR1cmF0aW9uKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0VmFsdWUoKSB7XHJcbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQodGhpcy52YWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldEFscGhhKCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQodGhpcy5hbHBoYSAqIDEwMCkgLyAxMDA7XHJcbiAgICB9XHJcbn1cclxuIl19